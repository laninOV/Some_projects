#include "scene.h"
#include "limitfield.h"

    /*мы используем constexpr для определения констант
    мы используем анонимные пространства имён,
    чтобы при компоновке с другими файлами исходного кода не возникало конфликтов имён
    т.е. другой файл в большой программе тоже может содержать константу BALL_SIZE,
    но с другим значением*/

namespace{
    // скорость пикселей в секунду
constexpr float BALL_SPEED_X = 50;
constexpr float BALL_SPEED_Y = 60;
constexpr float BALL_SIZE    = 40;
}


Scene::Scene(const limitfield &borders)
    : m_ballSpeed(BALL_SPEED_X, BALL_SPEED_Y)
    , m_ballSize(BALL_SIZE, BALL_SIZE)
    , m_borders(borders)
{

}

    /*мы должны проверить два случая
      - левая граница шарика левее левой границы поля
      - правая граница шарика правее правой границы поля*/

void Scene::update(float deltaSeconds)
{
    if(m_ballPosition.x < m_borders.leftEdge()) {
        m_ballPosition.x = m_borders.leftEdge();
        m_ballSize.x() = -m_ballSpeed.x;
    }
    else if(m_ballPosition.x > m_borders.rightEdge() - m_ballSize.x()){
        m_ballPosition.x = m_borders.ightEdge();
        m_ballSpeed.x() = -m_ballSpeed.x;
    }
}

void Scene::redraw(QPainter &painter)
{
    painter.setRenderHint(QPainter::Antialiasing);
    painter.setBrush(QBrush(QColor(255, 4, 34)));
    painter.drawEllipse(QRectF(m_ballPositionX, m_ballPositionY, BALL_SIZE, BALL_SIZE));
}



